#!/bin/bash

set -xe

if [ "$EUID" -ne 0 ]
	then echo "Please run as root"
	exit 1;
fi

function installDocker {
	echo "Installing docker..."
	curl -sSL https://get.docker.com | sh
	usermod -aG docker media
}

function prerequisites {
	# Create media user
	if id -u media > /dev/null 2>&1
	then
		echo "media user already exists";
	else
		echo "create user media"
		useradd media
	fi

	command -v docker &>/dev/null || installDocker

	if [ $(systemctl is-active docker) != "active" ]
	then
		systemctl enable docker
		systemctl start docker
	fi
}

function mountHDD {
	[ ! -d /mnt/HDD ] && mkdir /mnt/HDD

	HDD_UUID="6494496b-adf9-4977-abdc-d8f85a5b6f62"
	grep -q $HDD_UUID /etc/fstab || sudo tee -a /etc/fstab > /dev/null << EOF
UUID=6494496b-adf9-4977-abdc-d8f85a5b6f62 /mnt/HDD ext4 defaults,noatime 0 0
/mnt/HDD/1GB.swap  none  swap  sw 0  0
/mnt/HDD/root/opt /opt none bind 0 0
/mnt/HDD/root/var /var none bind 0 0
EOF

	# TODO: at reboot bind opt overlayfs not working
	# overlayfs	/var.overlay overlay noauto,nofail,x-systemd.automount,rw,lowerdir=/var,upperdir=/mnt/HDD/root/var.upper,workdir=/mnt/HDD/root/var.work    0   0
	#/var.overlay	/var	none	bind	0 0
	#overlayfs	/opt.overlay overlay noauto,nofail,x-systemd.automount,rw,lowerdir=/opt,upperdir=/mnt/HDD/root/opt.upper,workdir=/mnt/HDD/root/opt.work    0   0
	#/opt.overlay	/opt	none	bind	0 0

	mount -a
}

function startCouch {
	docker pull linuxserver/couchpotato
	docker stop couchpotato && docker rm couchpotato || echo "couchpotato first install"
	CFG=/opt/couchpotato
	DOWNLOADS=/mnt/HDD/downloads/complete
	MOVIES=/mnt/HDD/tv


	docker create \
		--name=couchpotato \
        	-e PGID=$(id -g media) -e PUID=$(id -u media) \
		-e UMASK_SET=022 \
        	-v /etc/localtime:/etc/localtime:ro \
		-p 5050:5050 \
        	-v $CFG:/config \
        	-v $DOWNLOADS:/downloads \
        	-v $MOVIES/couchpotato:/movies \
		--restart unless-stopped \
		linuxserver/couchpotato
	docker start couchpotato
}

function startOwnCloud {
	# after docker build git://github.com/comzone/rpi-owncloud.git
	docker run -t -i -p 80:80 -p 443:443 comzone/rpi-owncloud
}

function startSickrage {
	docker pull linuxserver/sickrage
	docker stop sickrage && docker rm sickrage || echo "sickrage first install"
	CFG=/opt/sickrage
	DOWNLOADS=/mnt/HDD/downloads/complete
	MOVIES=/mnt/HDD/tv

	docker create --name=sickrage \
		-v $CFG:/config \
		-v $DOWNLOADS:/downloads \
		-v $MOVIES/sickrage:/tv \
		-e PGID=$(id -g media) -e PUID=$(id -u media) \
		-v /etc/localtime:/etc/localtime:ro \
		-p 8081:8081 --restart=unless-stopped \
		linuxserver/sickrage
	docker start sickrage
}

function startTransmission {
	DOWNLOADS=/mnt/HDD/downloads

	docker pull linuxserver/transmission
	docker stop transmission && docker rm transmission || echo "transmission was not installed"

	docker create --name transmission --net="host" \
	    -v /opt/transmission:/config \
	    -v $DOWNLOADS:/downloads \
	    -v /mnt/HDD/tmp:/watch \
	    -e PGID=$(id -g media) -e PUID=$(id -u media) \
	    -v /etc/localtime:/etc/localtime:ro \
	    -p 9091:9091 -p 51413:51413 \
	    -p 51413:51413/udp \
	    --restart=unless-stopped \
	    linuxserver/transmission

	docker start transmission
}


####################################################

# cronjob

function installBkup {
	[ -d /home/media/bin ] || mkdir -p /home/media/bin

	cat << EOF > /home/media/bin/backup
#!/bin/bash

BKUP_DIR=/mnt/bkup
SYS_BKUP=/mnt/HDD/system

sudo mount -U f33527bb-b8d9-4dee-b822-b45db83cbe47 \$BKUP_DIR
# TODO: when out of disk space, add --delete
echo "Backup redundant"
sudo rsync -ax /mnt/HDD/shares/ \$BKUP_DIR
sudo umount \$BKUP_DIR
echo "Done."

echo "Backup system"
sudo rsync -aAXx --delete /home /etc \$SYS_BKUP
echo "Done."

# some housecleaning
sudo journalctl --vacuum-size=50M

# delete incomplete downloaded files older than 100 days (manually do it for downloaded)
find /mnt/HDD/downloads/incomplete -mtime +100 -exec sudo rm -fr {} \;
find /mnt/HDD/downloads/complete -mtime +100 -exec sudo rm -fr {} \;


sudo fstrim -v /
EOF

	chmod +x /home/media/bin/backup
}


# TODO: docker if possible
function installMinidlna {
	apt-get install -y minidlna
	systemctl stop minidlna
	sed -i 's#^media_dir=.*#media_dir=/mnt/HDD/tv/#' /etc/minidlna.conf
	usermod -a -G media minidlna
	systemctl start minidlna
}


function installAll {
	prerequisites
	mountHDD
	startCouch
	startSickrage
	startTransmission
	if [ ! -f /home/media/bin/backup ]
	then
		installBkup
		(crontab -l -u media 2>/dev/null || true; echo -e "MAILTO=\"andoniu@yahoo.co.uk\"\n30 4 * * 0 /home/media/bin/backup") | crontab -u media -
	fi
	command -v minidlnad  &>/dev/null || installMinidlna
}

function test {
	echo "testing..."
}

$1
